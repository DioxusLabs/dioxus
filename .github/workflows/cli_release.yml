name: Build CLI for Release

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  matrix_build:
    runs-on: ${{ matrix.platform.os }}
    env:
      WORKING_DIR: ${{github.workspace}}/source/packages/cli
    strategy:
      matrix:
        platform:
          - {
              target: x86_64-pc-windows-msvc,
              os: windows-latest,
              toolchain: "1.70.0",
              name: dx-x86_64-pc-windows-msvc.zip,
            }
          - {
              target: x86_64-apple-darwin,
              os: macos-latest,
              toolchain: "1.70.0",
              name: dx-x86_64-apple-darwin.tar.gz,
            }
          - {
              target: x86_64-unknown-linux-gnu,
              os: ubuntu-latest,
              toolchain: "1.70.0",
              name: dx-x86_64-unknown-linux-gnu.tar.gz,
            }
    steps:
      - name: echo workspace
        if: matrix.platform.os != 'windows-latest'
        run: echo ${{github.workspace}}
      - name: install stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.platform.toolchain }}
          target: ${{ matrix.platform.target }}
          override: true
          default: true
      - name: build cli
        working-directory: ${{ env.WORKING_DIR }}
        run: cargo build --release --target ${{ matrix.platform.target }}
      - name: Archive Windows artifact
        if: matrix.platform.os == 'windows-latest'
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          cd target/${{ matrix.platform.target }}/release
          strip dx.exe
          7z a ../../../${{ matrix.platform.name }} dx.exe
          cd -
      - name: Archive -Nix artifact
        if: matrix.platform.os != 'windows-latest'
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          cd target/${{ matrix.platform.target }}/release
          strip dx
          tar czvf ../../../${{ matrix.platform.name }} dx
          cd -
      - name: upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.platform.name }}
          path: ${{env.WORKING_DIR}}/${{ matrix.platform.name }}

use dotenvy::dotenv;
use std::env;
use std::fs::File;
use std::io::Write;

// https://dev.to/javiasilis/how-to-pass-environment-variables-to-a-rust-wasm-application-like-yew-dioxus-and-leptos-as-a-typescript-developer-ond

fn export_env_variables() -> Result<(), std::io::Error> {
    println!("cargo:rerun-if-changed=.env");
    let dest_path = "./src/env.rs";
    let mut f = File::create(dest_path)?;

    // use the dotenv crate to get the .env values
    dotenv().ok();
    f.write_all(b"// This file is automatically generated by build.rs\n\n")
        .unwrap();
    for (key, value) in env::vars() {
        if key.starts_with("DIOXUS_FRONT_") {
            let line = format!(
                "pub const {}: &str = \"{}\";\n",
                key,
                value.replace('\"', "\\\"")
            );
            f.write_all(line.as_bytes())?;
        }
    }
    Ok(())
}

fn main() {
    export_env_variables().unwrap();
}

{
    "name": "dioxus",
    "displayName": "Dioxus",
    "description": "Useful tools for working with Dioxus",
    "version": "0.0.1",
    "publisher": "DioxusLabs",
    "private": true,
    "license": "MIT",
    "icon": "static/icon.png",
    "repository": {
        "type": "git",
        "url": "https://github.com/DioxusLabs/cli"
    },
    "engines": {
        "vscode": "^1.68.1"
    },
    "categories": [
        "Programming Languages"
    ],
    "activationEvents": [
        "onCommand:extension.htmlToDioxusRsx",
        "onCommand:extension.htmlToDioxusComponent",
        "onCommand:extension.formatRsx",
        "onCommand:extension.formatRsxDocument"
    ],
    "main": "./out/main",
    "contributes": {
        "commands": [
            {
                "command": "extension.htmlToDioxusRsx",
                "title": "Dioxus: Convert HTML to RSX"
            },
            {
                "command": "extension.htmlToDioxusComponent",
                "title": "Dioxus: Convert HTML to Component"
            },
            {
                "command": "extension.formatRsx",
                "title": "Dioxus: Format RSX"
            },
            {
                "command": "extension.formatRsxDocument",
                "title": "Dioxus: Format RSX Document"
            }
        ],
        "configuration": {
            "properties": {
                "dioxus.formatOnSave": {
                    "type": [
                        "string"
                    ],
                    "default": "followFormatOnSave",
                    "enum": [
                        "followFormatOnSave",
                        "enabled",
                        "disabled"
                    ],
                    "enumItemLabels": [
                        "Follow the normal formatOnSave config",
                        "Enabled",
                        "Disabled"
                    ],
                    "enumDescriptions": [
                        "Only format Rsx when saving files if the editor.formatOnSave config is enabled",
                        "Always format Rsx when a Rust file is saved",
                        "Never format Rsx when a file is saved"
                    ],
                    "description": "Format RSX when a file is saved."
                }
            }
        }
    },
    "scripts": {
        "vscode:prepublish": "npm run build-base -- --minify",
        "package": "vsce package -o rust-analyzer.vsix",
        "build-base": "esbuild ./src/main.ts --bundle --outfile=out/main.js --external:vscode --format=cjs --platform=node --target=node16",
        "build": "npm run build-base -- --sourcemap",
        "watch": "npm run build-base -- --sourcemap --watch",
        "lint": "prettier --check . && eslint -c .eslintrc.js --ext ts ./src ./tests",
        "fix": "prettier --write . && eslint -c .eslintrc.js --ext ts ./src ./tests --fix",
        "pretest": "tsc && npm run build",
        "test": "cross-env TEST_VARIABLE=test node ./out/tests/runTests.js"
    },
    "devDependencies": {
        "@types/node": "^18.0.2",
        "@types/vscode": "^1.68.1",
        "@typescript-eslint/eslint-plugin": "^5.30.5",
        "@typescript-eslint/parser": "^5.30.5",
        "cross-env": "^7.0.3",
        "esbuild": "^0.14.27",
        "eslint": "^8.19.0",
        "typescript": "^4.7.4",
        "eslint-config-prettier": "^8.5.0",
        "ovsx": "^0.5.1",
        "prettier": "^2.6.2",
        "tslib": "^2.3.0",
        "vsce": "^2.7.0"
    },
    "dependencies": {
        "vsce": "^2.9.2"
    }
}
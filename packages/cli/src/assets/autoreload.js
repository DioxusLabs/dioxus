// Dioxus-CLI
// https://github.com/DioxusLabs/dioxus/tree/master/packages/cli

(function () {
  var protocol = window.location.protocol === "https:" ? "wss:" : "ws:";
  var url = protocol + "//" + window.location.host + "/_dioxus/ws";
  var poll_interval = 8080;
  var reload_upon_connect = () => {
    window.setTimeout(() => {
      var ws = new WebSocket(url);
      ws.onopen = () => window.location.reload();
      ws.onclose = reload_upon_connect;
    }, poll_interval);
  };

  var ws = new WebSocket(url);
  ws.onmessage = (ev) => {
    const data = JSON.parse(ev.data);
    if (data.method == "reload") {
      window.location.reload();
    }
    else if (data.method == "refresh_assets") {
      const urls = new Set(data.params.urls);
      const random_query_param =
        "?dioxus=" + Math.random().toString(36).substring(7);
      // Look for any urls that match the one we got from the server and add a random query param to it to force a reload
      // Go through every element attribute
      for (const url of urls) {
        for (const element of document.querySelectorAll("*")) {
          for (const attribute of element.getAttributeNames()) {
            const attribute_value = element.getAttribute(attribute);
            if (attribute_value.startsWith(url)) {
              const remaining = attribute_value.substring(url.length);

              // Create a new attribute that adds a random query param to the url
              let new_attribute_value;

              // If the segment starts with a query param, we need to check modify the query param
              const starts_with_query_param = remaining.startsWith("?");
              if (starts_with_query_param) {
                new_attribute_value = url + random_query_param;
                const remainingWithoutQuery = remaining.substring(1);
                const query_params = remainingWithoutQuery.split("&");
                for (let i = 0; i < query_params.length; i++) {
                  const query_param = query_params[i]
                  // check if the query param looks like a random query param generated by dioxus before we add it
                  if (!query_param.startsWith("dioxus=")) {
                    new_attribute_value += "&" + query_param;
                  }
                }
              }
              else {
                new_attribute_value = url + random_query_param;
              }
              element.setAttribute(attribute, new_attribute_value);
            }
          }
        }
      }
    }
  };
  ws.onclose = reload_upon_connect;
})();

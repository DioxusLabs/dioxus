[package]
name = "dioxus-server"
authors = ["Jonathan Kelley", "Evan Almloff"]
version = { workspace = true }
edition = "2021"
description = "Fullstack utilities for Dioxus: Build fullstack web, desktop, and mobile apps with a single codebase."
license = "MIT OR Apache-2.0"
repository = "https://github.com/DioxusLabs/dioxus/"
homepage = "https://dioxuslabs.com"
keywords = ["web", "desktop", "mobile", "gui", "server"]
resolver = "2"

[dependencies]
# server functions
anyhow = { workspace = true }

# axum
axum = { workspace = true, features = ["multipart", "ws", "json", "form"]}


dioxus-core = { workspace = true }
dioxus-core-macro = { workspace = true }
dioxus-document = { workspace = true }
dioxus-html = { workspace = true }
generational-box = { workspace = true }

# Dioxus + SSR
# dioxus-server = { workspace = true, optional = true }
dioxus-isrg = { workspace = true }
dioxus-signals = { workspace = true }
dioxus-hooks = { workspace = true }
dioxus-router = { workspace = true, features = ["streaming"], optional = true }
dioxus-fullstack-core = { workspace = true }
dashmap = "6.1.0"
inventory = { workspace = true }
dioxus-ssr = { workspace = true }

hyper-util = { workspace = true, features = ["full"] }
hyper = { workspace = true }

# Web Integration
# dioxus-web = { workspace = true, features = ["hydrate"], default-features = false, optional = true }
dioxus-interpreter-js = { workspace = true }

tracing = { workspace = true }
tracing-futures = { workspace = true }
tokio-util = { workspace = true, features = ["rt"] }
async-trait = { workspace = true }

serde = { workspace = true }
tokio-stream = { workspace = true, features = ["sync"] }
futures-util = { workspace = true }
futures-channel = { workspace = true }
ciborium = { workspace = true }
base64 = { workspace = true }
rustls = { workspace = true, optional = true }
hyper-rustls = { workspace = true, optional = true }

url = { workspace = true, default-features = true }
serde_json = { workspace = true }

serde_qs = { workspace = true, default-features = true }
multer = { optional = true, workspace = true, default-features = true }
rkyv = { optional = true,  default-features = true, version = "0.8" }

# reqwest client
reqwest = { default-features = false, features = [
  "multipart",
  "stream",
  "json"
], workspace = true }
futures = { workspace = true, default-features = true }

pin-project = { version = "1.1.10" }
thiserror = { workspace = true }
bytes = {version = "1.10.1", features = ["serde"]}
tower-http = { workspace = true, features = ["fs"] }
tower = { workspace = true, features = ["util"] }
tower-layer = { version = "0.3.3", optional = true }
parking_lot = { workspace = true, features = ["send_guard"] }
web-sys = { version = "0.3.77", optional = true, features = [
  "Window",
  "Document",
  "Element",
  "HtmlDocument",
  "Storage",
  "console",
] }

subsecond = { workspace =  true }
dioxus-cli-config = { workspace = true }
tokio-tungstenite = { workspace = true }
dioxus-devtools = { workspace = true, features = ["serve"] }
aws-lc-rs = { version = "1.13.1", optional = true }
dioxus-history = { workspace = true }
http.workspace = true
enumset = "1.1.6"
throw_error = "0.3.0"
const_format = { workspace = true, default-features = true }
const-str = { workspace = true, default-features = true }
rustversion = { workspace = true, default-features = true }
xxhash-rust = { features = [
  "const_xxh64",
], workspace = true, default-features = true }
http-body-util = "0.1.3"
reqwest-websocket = { version = "0.5.1", features = ["json"] }
derive_more = { version = "2.0.1", features = ["deref", "deref_mut", "display", "from"] }

rmp-serde = { version = "1.3", default-features = true }
# rmp-serde = { workspace = true, default-features = true }

[target.'cfg(target_arch = "wasm32")'.dependencies]
tokio = { workspace = true, features = ["rt", "sync", "macros"], optional = true }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
tokio = { workspace = true, features = ["rt", "sync", "rt-multi-thread", "macros", "net"] }


[dev-dependencies]
dioxus = { workspace = true, features = ["fullstack"] }
tokio = { workspace = true, features = ["full"] }

[features]
default = ["router", "document"]
# default = ["router", "document", "client", "server"]
document = []
web = ["dep:web-sys", "dioxus-fullstack-core/web"]
router = ["dep:dioxus-router"]
default-tls = []
rustls = ["dep:rustls", "dep:hyper-rustls"]
# client = ["reqwest"]
# reqwest = ["dep:reqwest"]
# axum = ["server", "dep:axum", "axum/default", "axum/ws", "axum/macros"]
axum-no-default = ["server"]
server = [
    # "server-core" ,
    # "default-tls",
    # "dep:axum",
    # "dep:inventory",
    # "dep:dioxus-isrg",
    # "dep:tokio",
    # "dep:hyper-util",
    # "dep:hyper",
    # "dep:tower",
    # "dep:tower-layer",
    # "dep:tokio-util",
    # "dep:dioxus-cli-config",
    # "dep:tower-http",
    # "dep:parking_lot",
    # "dep:async-trait",
    # "dep:pin-project",
    # "axum"
]
server-core = [
    # "dioxus-fullstack-hooks/server",
    # "dioxus-interpreter-js",
]
aws-lc-rs = ["dep:aws-lc-rs"]
rkyv = ["dep:rkyv"]

# document = ["dioxus-web?/document"]
# devtools = ["dioxus-web?/devtools", "dep:dioxus-devtools"]
# web = ["dep:dioxus-web", "dep:web-sys", "dioxus-fullstack-hooks/web"]

[package.metadata.docs.rs]
cargo-args = ["-Zunstable-options", "-Zrustdoc-scrape-examples"]
features = ["axum", "web", "aws-lc-rs"]

function w(p,E,b,N){if(N==="style"){p.style.setProperty(E,b);return}if(N){p.setAttributeNS(N,E,b);return}switch(E){case"value":if(p.value!==b)p.value=b;break;case"initial_value":p.defaultValue=b;break;case"checked":p.checked=j(b);break;case"initial_checked":p.defaultChecked=j(b);break;case"selected":p.selected=j(b);break;case"initial_selected":p.defaultSelected=j(b);break;case"dangerous_inner_html":p.innerHTML=b;break;default:if(!j(b)&&x(E))p.removeAttribute(E);else p.setAttribute(E,b)}}var j=function(p){return p==="true"||p===!0},x=function(p){switch(p){case"allowfullscreen":case"allowpaymentrequest":case"async":case"autofocus":case"autoplay":case"checked":case"controls":case"default":case"defer":case"disabled":case"formnovalidate":case"hidden":case"ismap":case"itemscope":case"loop":case"multiple":case"muted":case"nomodule":case"novalidate":case"open":case"playsinline":case"readonly":case"required":case"reversed":case"selected":case"truespeed":case"webkitdirectory":return!0;default:return!1}};function z(p){const E=new FormData(p),b={};return E.forEach((N,q)=>{if(b[q])b[q].push(N);else b[q]=[N]}),{valid:p.checkValidity(),values:b}}export{w as setAttributeInner,z as retrieveFormValues};
